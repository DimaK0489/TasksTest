{"version":3,"sources":["Components/StartPage/StartPage.module.css","Components/UsersPage/Users/Users.module.css","BLL/AppReducer.ts","Components/StartPage/StartPage.tsx","DAL/API.ts","Components/UsersPage/Users/Users.tsx","Components/UsersPage/UsersPageContainer.tsx","Routes.tsx","Components/Header/Header.tsx","App.tsx","reportWebVitals.ts","BLL/Store.ts","index.tsx"],"names":["module","exports","ACTION_TYPE","StartPage","className","style","screensaver","src","alt","instance","axios","create","baseURL","API","get","initialState","getUsersTC","dispatch","then","res","users","data","type","GET_USERS","Users","props","deleteCallbackHandler","alert","list__users","map","u","first_name","last_name","email","onClick","UsersPageContainer","useDispatch","useSelector","state","app","useEffect","deleteUserCallback","id","DELETE_USER","deleteUserAC","PATH","Routes","path","exact","render","to","Header","page","button__link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","filter","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2404a3fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"StartPage_page__q-1OI\",\"button__link\":\"StartPage_button__link__3rI0k\",\"screensaver\":\"StartPage_screensaver__14ttv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__users\":\"Users_list__users__377ze\"};","import {Dispatch} from \"redux\";\r\nimport {API, ResponseType, UsersDataType} from \"../DAL/API\";\r\n\r\n//types Action\r\nexport type ActionType = SetUsersActionType | DeleteUserActionType\r\nexport type SetUsersActionType = ReturnType<typeof setUsersAC>\r\nexport type DeleteUserActionType = ReturnType<typeof deleteUserAC>\r\n\r\nexport enum ACTION_TYPE {\r\n    GET_USERS = 'GET_USERS',\r\n    DELETE_USER = 'DElETE_USER',\r\n}\r\n\r\nconst initialState: UsersDataType[] = []\r\n\r\n//reducer\r\nexport const appReducer = (state: Array<UsersDataType> = initialState, action: ActionType): Array<UsersDataType> => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.GET_USERS:\r\n            return action.users.data.map(u => u)\r\n        case ACTION_TYPE.DELETE_USER:\r\n            return state.filter( (u => u.id !== action.id))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setUsersAC = (users: ResponseType) => ({type: ACTION_TYPE.GET_USERS, users} as const)\r\nexport const deleteUserAC = (id: number | string) => ({type: ACTION_TYPE.DELETE_USER, id} as const)\r\n\r\n//thunk\r\nexport const getUsersTC = () => (dispatch: Dispatch) => {\r\n    API.getUsers()\r\n        .then((res) => {\r\n            dispatch(setUsersAC(res.data))\r\n        })\r\n}","import style from './StartPage.module.css'\r\n\r\n\r\nexport const StartPage = () => {\r\n    return (\r\n        <div className={style.screensaver}>\r\n            <img src={'https://www.look.com.ua/large/201209/39310.jpg'} alt={'screensaver'}/>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nexport type ResponseType = {\r\n    page: number\r\n    per_page: number\r\n    total: number\r\n    total_pages: number\r\n    data: UsersDataType[]\r\n}\r\nexport type UsersDataType = {\r\n    id: number | string\r\n    email: string\r\n    first_name: string\r\n    last_name: string\r\n    avatar?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/api/'\r\n})\r\n\r\nexport const API = {\r\n    getUsers() {\r\n        return instance.get<ResponseType>('users?per_page=10')\r\n    }\r\n}\r\n","import {UsersDataType} from \"../../../DAL/API\";\r\nimport style from './Users.module.css'\r\n\r\ntype UsersPropsType = {\r\n    users: UsersDataType[]\r\n    deleteUserCallback: (id: number | string) => void\r\n}\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    const deleteCallbackHandler = () => {\r\n        alert('add function')\r\n    }\r\n    return (\r\n        <div className={style.list__users}>\r\n            {\r\n                props.users.map(u =>\r\n                <div>\r\n                    {u.first_name} {u.last_name} {u.email}\r\n                    <button onClick={deleteCallbackHandler}>Delete</button>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../BLL/Store\";\r\nimport {deleteUserAC, getUsersTC} from \"../../BLL/AppReducer\";\r\nimport {useEffect} from \"react\";\r\nimport {Users} from \"./Users/Users\";\r\nimport {UsersDataType} from \"../../DAL/API\";\r\n\r\nexport const UsersPageContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const users = useSelector<AppRootStateType, UsersDataType[]>(state => state.app)\r\n\r\n    useEffect( () => {\r\n        dispatch(getUsersTC())\r\n    },[dispatch])\r\n\r\n    const deleteCallbackHandler = (id: number | string) => {\r\n        dispatch(deleteUserAC(id))\r\n    }\r\n    return (\r\n        <div>\r\n            <Users users={users}\r\n                   deleteUserCallback={deleteCallbackHandler}\r\n            />\r\n        </div>\r\n    )\r\n}","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {StartPage} from \"./Components/StartPage/StartPage\";\r\nimport {UsersPageContainer} from \"./Components/UsersPage/UsersPageContainer\";\r\n\r\nexport const PATH = {\r\n    START_PAGE: '/startPage',\r\n    USERS_PAGE: '/userPage'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.START_PAGE}/>}/>\r\n\r\n                <Route path={PATH.START_PAGE} render={ () => <StartPage/>}/>\r\n                <Route path={PATH.USERS_PAGE} render={ () => <UsersPageContainer />}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import style from \"../StartPage/StartPage.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.page}>\r\n            <NavLink to={PATH.START_PAGE} className={style.button__link}>Start Page</NavLink>\r\n            <NavLink to={PATH.USERS_PAGE} className={style.button__link}>Get User</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./Components/Header/Header\";\r\nimport {Routes} from \"./Routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Header/>\r\n        <Routes/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./AppReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    app: appReducer\r\n})\r\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./BLL/Store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}