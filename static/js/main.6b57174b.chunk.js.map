{"version":3,"sources":["Components/StartPage/StartPage.module.css","Components/AddFormUser/AddUserForm.module.css","Components/SearchUser/SearchUser.module.css","Components/UsersPage/Users/Users.module.css","Components/UsersPage/UsersPageContainer.module.css","Components/NotFoundPage/NotFoundPage.module.css","BLL/AppExpectationReducer.ts","Components/StartPage/StartPage.tsx","DAL/API.ts","BLL/AppReducer.ts","Components/UsersPage/Users/Users.tsx","Components/AddFormUser/AddUserForm.tsx","Components/SearchUser/SearchUser.tsx","Components/UsersPage/UsersPageContainer.tsx","Components/NotFoundPage/NotFoundPage.tsx","Routes.tsx","Components/Header/Header.tsx","Components/Image/preloader.svg","Components/Preloader/Preloader.tsx","App.tsx","reportWebVitals.ts","BLL/Store.ts","index.tsx"],"names":["module","exports","ACTION_TYPE","StartPage","className","style","screensaver","src","alt","instance","axios","create","baseURL","API","get","initialState","status","error","setAppStatusAC","type","APP_STATUS","setAppErrorAC","APP_ERROR","getUsersTC","dispatch","then","res","users","data","GET_USERS","catch","Users","React","memo","props","list__users","foundUsers","map","u","first_name","last_name","email","button__del","onClick","id","deleteUserCallback","AddNewUser","useDispatch","formik","useFormik","initialValues","v1","validate","values","errors","onSubmit","user","ADD_USER","resetForm","form_user","handleSubmit","htmlFor","touched","color","textAlign","placeholder","input__enter","getFieldProps","button__submit","SearchUser","searchHandler","resetSettings","useCallback","container__search","input_search","onChange","button__res","UsersPageContainer","useSelector","state","app","useState","foundUser","setFoundUser","useEffect","container__comp","DELETE_USER","deleteUserAC","ev","value","currentTarget","results","filter","toLowerCase","indexOf","NotFoundPage","error__page","to","PATH","Routes","path","exact","render","Header","page","button__link","Preloader","preloader","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b57174b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"StartPage_page__q-1OI\",\"button__link\":\"StartPage_button__link__3rI0k\",\"screensaver\":\"StartPage_screensaver__14ttv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_user\":\"AddUserForm_form_user__2Lv9Q\",\"input__enter\":\"AddUserForm_input__enter__2o0x-\",\"button__submit\":\"AddUserForm_button__submit__zX7AA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__search\":\"SearchUser_container__search__zdMSH\",\"button__res\":\"SearchUser_button__res__6ZUik\",\"input_search\":\"SearchUser_input_search__2hvz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__users\":\"Users_list__users__377ze\",\"button__del\":\"Users_button__del__2Pug8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__comp\":\"UsersPageContainer_container__comp__eEJ_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error__page\":\"NotFoundPage_error__page__3Jy-5\"};","// types\r\nexport type RequestStatusType = 'loading' | 'succeeded'\r\ntype InitialStateType = typeof initialState\r\nexport type ExpectationActionType = ReturnType<typeof setAppStatusAC> | ReturnType<typeof setAppErrorAC>\r\n\r\nexport enum ACTION_TYPE {\r\n    APP_STATUS = 'APP_STATUS',\r\n    APP_ERROR = 'APP_ERROR'\r\n}\r\n\r\nconst initialState = {\r\n    status: 'succeeded' as RequestStatusType,\r\n    error: null as null | string\r\n}\r\n\r\n//reducer\r\nexport const appExpectationReducer = (state: InitialStateType = initialState, action: ExpectationActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.APP_STATUS:\r\n            return {...state, status: action.status}\r\n        case ACTION_TYPE.APP_ERROR:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Action\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: ACTION_TYPE.APP_STATUS, status} as const)\r\nexport const setAppErrorAC = (error: null | string) => ({type: ACTION_TYPE.APP_ERROR, error} as const)","import style from './StartPage.module.css'\r\n\r\n\r\nexport const StartPage = () => {\r\n    return (\r\n        <div className={style.screensaver}>\r\n            <img src={'https://www.look.com.ua/large/201209/39310.jpg'} alt={'screensaver'}/>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nexport type ResponseType = {\r\n    page: number\r\n    per_page: number\r\n    total: number\r\n    total_pages: number\r\n    data: UsersDataType[]\r\n}\r\nexport type UsersDataType = {\r\n    id: number | string\r\n    email: string\r\n    first_name: string\r\n    last_name: string\r\n    avatar?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/api/'\r\n})\r\n\r\nexport const API = {\r\n    getUsers() {\r\n        return instance.get<ResponseType>('users?per_page=10')\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {API, ResponseType, UsersDataType} from \"../DAL/API\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./AppExpectationReducer\";\r\n\r\n//types Action\r\nexport type ActionType = SetUsersActionType | DeleteUserActionType | AddUserActionType\r\nexport type SetUsersActionType = ReturnType<typeof setUsersAC>\r\nexport type DeleteUserActionType = ReturnType<typeof deleteUserAC>\r\nexport type AddUserActionType = ReturnType<typeof addUserAC>\r\n\r\nexport enum ACTION_TYPE {\r\n    GET_USERS = 'GET_USERS',\r\n    DELETE_USER = 'DElETE_USER',\r\n    ADD_USER = 'ADD_USER'\r\n}\r\n\r\nconst initialState: UsersDataType[] = []\r\n\r\n//reducer\r\nexport const appReducer = (state: Array<UsersDataType> = initialState, action: ActionType): Array<UsersDataType> => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.GET_USERS:\r\n            return action.users.data.map(u => u)\r\n        case ACTION_TYPE.DELETE_USER:\r\n            return state.filter((u => u.id !== action.id))\r\n        case ACTION_TYPE.ADD_USER:\r\n            return [...state, {...action.user}]\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setUsersAC = (users: ResponseType) => ({type: ACTION_TYPE.GET_USERS, users} as const)\r\nexport const deleteUserAC = (id: number | string) => ({type: ACTION_TYPE.DELETE_USER, id} as const)\r\nexport const addUserAC = (user: UsersDataType) => ({type: ACTION_TYPE.ADD_USER, user} as const)\r\n\r\n//thunk\r\nexport const getUsersTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    API.getUsers()\r\n        .then((res) => {\r\n            dispatch(setUsersAC(res.data))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}","import {UsersDataType} from \"../../../DAL/API\";\r\nimport style from './Users.module.css'\r\nimport React from \"react\";\r\n\r\ntype UsersPropsType = {\r\n    foundUsers: UsersDataType[]\r\n    deleteUserCallback: (id: number | string) => void\r\n}\r\n\r\nexport const Users = React.memo((props: UsersPropsType) => {\r\n    const deleteCallbackHandler = (id: string | number) => {\r\n        props.deleteUserCallback(id)\r\n    }\r\n    return (\r\n        <div className={style.list__users}>\r\n            {\r\n                props.foundUsers.map(u =>\r\n                <div key={u.id}>\r\n                    {u.first_name} {u.last_name} {u.email}\r\n                    <button className={style.button__del} onClick={() => deleteCallbackHandler(u.id)}>Delete</button>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n})","import {useFormik} from \"formik\";\r\nimport {v1} from \"uuid\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addUserAC} from \"../../BLL/AppReducer\";\r\nimport style from './AddUserForm.module.css'\r\nimport React from \"react\";\r\n\r\nexport type FormikUserType = {\r\n    id: string\r\n    first_name: string\r\n    last_name: string\r\n    email: string\r\n}\r\n\r\nexport const AddNewUser = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {id: v1(), first_name: '', last_name: '', email: ''},\r\n        validate: (values) => {\r\n            const errors: any = {};\r\n            if (!values.first_name) {\r\n                errors.first_name = \"First_name should be filled\";\r\n            }\r\n            if (!values.last_name) {\r\n                errors.last_name = \"Last_name should be filled\"\r\n            }\r\n            if (!values.email) {\r\n                errors.email = \"Email is required\"\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(addUserAC(values))\r\n            formik.resetForm()\r\n        }\r\n    });\r\n    return (\r\n        <form className={style.form_user} onSubmit={formik.handleSubmit}>\r\n            <label htmlFor=\"New User\">New User:</label>\r\n            {formik.touched.first_name && <div style={{color: \"red\", textAlign: 'center'}}>{formik.errors.first_name}</div>}\r\n            {formik.touched.last_name && <div style={{color: \"red\", textAlign: 'center'}}>{formik.errors.last_name}</div>}\r\n            {formik.touched.email && <div style={{color: \"red\", textAlign: 'center'}}>{formik.errors.email}</div>}\r\n\r\n            <input\r\n                id=\"v1()\"\r\n                placeholder={'first_name'}\r\n                className={style.input__enter}\r\n                {...formik.getFieldProps('first_name')}\r\n\r\n            />\r\n            <input\r\n                id=\"v1()\"\r\n                placeholder={'last_name'}\r\n                className={style.input__enter}\r\n                {...formik.getFieldProps('last_name')}\r\n            />\r\n            <input\r\n                id=\"v1()\"\r\n                placeholder={'email'}\r\n                className={style.input__enter}\r\n                {...formik.getFieldProps('email')}\r\n            />\r\n            <button className={style.button__submit} type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n})","import React, {ChangeEvent, useCallback} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getUsersTC} from \"../../BLL/AppReducer\";\r\nimport style from './SearchUser.module.css'\r\n\r\ntype SearchUserPropsType = {\r\n    searchHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const SearchUser: React.FC<SearchUserPropsType> = React.memo(({searchHandler}) => {\r\n    const dispatch = useDispatch()\r\n    const resetSettings = useCallback(function () {\r\n        dispatch(getUsersTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.container__search}>\r\n            <input\r\n                type=\"search\"\r\n                className={style.input_search}\r\n                placeholder=\"Search user list\"\r\n                onChange={searchHandler}\r\n            />\r\n            <button className={style.button__res} onClick={resetSettings}>Reset</button>\r\n        </div>\r\n    );\r\n})","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../BLL/Store\";\r\nimport {deleteUserAC, getUsersTC} from \"../../BLL/AppReducer\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {Users} from \"./Users/Users\";\r\nimport {UsersDataType} from \"../../DAL/API\";\r\nimport {AddNewUser} from \"../AddFormUser/AddUserForm\";\r\nimport {SearchUser} from \"../SearchUser/SearchUser\";\r\nimport style from './UsersPageContainer.module.css'\r\n\r\nexport const UsersPageContainer = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const users = useSelector<AppRootStateType, UsersDataType[]>(state => state.app)\r\n    const [foundUser, setFoundUser] = useState<UsersDataType[]>(users)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        setFoundUser(users)\r\n    }, [users])\r\n\r\n    const deleteCallbackHandler = (id: number | string) => {\r\n        dispatch(deleteUserAC(id))\r\n    }\r\n    const searchHandler = (ev: ChangeEvent<HTMLInputElement>) => {\r\n        const value = ev.currentTarget.value\r\n        const results = users.filter((user) => {\r\n            return user.first_name.toLowerCase().indexOf(value) > -1\r\n                || user.last_name.toLowerCase().indexOf(value) > -1\r\n                || user.email.toLowerCase().indexOf(value) > -1\r\n        })\r\n        setFoundUser(results)\r\n    }\r\n    return (\r\n        <div className={style.container__comp}>\r\n            <Users foundUsers={foundUser}\r\n                   deleteUserCallback={deleteCallbackHandler}\r\n            />\r\n            <SearchUser searchHandler={searchHandler}/>\r\n            <AddNewUser/>\r\n        </div>\r\n    )\r\n})","import { Link } from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../BLL/Store\";\r\nimport {setAppErrorAC} from \"../../BLL/AppExpectationReducer\";\r\nimport React from \"react\";\r\nimport style from './NotFoundPage.module.css'\r\n\r\nexport const NotFoundPage = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<AppRootStateType, null | string>(state => state.status.error)\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickable') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    }\r\n    return (\r\n        <div className={style.error__page} >\r\n            {error}\r\n            <img src={'https://img.freepik.com/free-vector/404-error-with-character-error-design-template-website_114341-24.jpg?size=626&ext=jpg'}\r\n                 alt={'pageNotFound'}/>\r\n            <p>\r\n                <Link to=\"/\"> Go to Home </Link>\r\n            </p>\r\n        </div>\r\n    );\r\n})","import {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {StartPage} from \"./Components/StartPage/StartPage\";\r\nimport {UsersPageContainer} from \"./Components/UsersPage/UsersPageContainer\";\r\nimport {NotFoundPage} from \"./Components/NotFoundPage/NotFoundPage\";\r\n\r\nexport const PATH = {\r\n    START_PAGE: '/startPage',\r\n    USERS_PAGE: '/userPage'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.START_PAGE}/>}/>\r\n\r\n                <Route path={PATH.START_PAGE} render={ () => <StartPage/>}/>\r\n                <Route path={PATH.USERS_PAGE} render={ () => <UsersPageContainer />}/>\r\n\r\n                <Route path={'*'} render={ () => <NotFoundPage/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import style from \"../StartPage/StartPage.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={style.page}>\r\n            <NavLink to={PATH.START_PAGE} className={style.button__link}>Start Page</NavLink>\r\n            <NavLink to={PATH.USERS_PAGE} className={style.button__link}>Get User</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.b0090460.svg\";","import React from \"react\";\r\nimport preloader from \"../Image/preloader.svg\";\r\n\r\nexport const Preloader = () => {\r\n    return <img src={preloader} alt={\"\"}/>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./Components/Header/Header\";\r\nimport {Routes} from \"./Routes\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./BLL/Store\";\r\nimport {Preloader} from './Components/Preloader/Preloader';\r\n\r\nfunction App() {\r\n    const status = useSelector<AppRootStateType, string>(state => state.status.status)\r\n    return (\r\n        <div className=\"App\">\r\n            {/*<NotFoundPage/>*/}\r\n            {status === 'loading' && <div className={'preLoader'}><Preloader/></div>}\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./AppReducer\";\r\nimport {appExpectationReducer} from \"./AppExpectationReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    app: appReducer,\r\n    status: appExpectationReducer\r\n})\r\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./BLL/Store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}